# Normal flow

record(ao, "${P}UCmd") {
	field(DESC, "Voltage command")
	field(DTYP, "stream")
	field(OUT, "@simple.proto setUCmd $(PORT)")
	field(EGU, "V")

	field(FLNK, "${P}URb")
}

record(ai, "${P}URb") {
	field(DESC, "Voltage read-back")
	field(DTYP, "stream")
	field(INP, "@simple.proto getURb $(PORT)")
	field(EGU, "V")
	field(PINI, "YES")
}

record(ai, "${P}UMes") {
	field(DESC, "Measure of voltage intensity")
	field(DTYP, "stream")
	field(INP, "@simple.proto getUMes $(PORT)")
	field(EGU, "V")
	field(PINI, "YES")
	field(SCAN, "5 second")
}

record(bo, "${P}PowerCmd") {
	field(DESC, "Command for enabling output")
	field(DTYP, "stream")
	field(OUT, "@simple.proto setPowerCmd $(PORT)")
	field(ZNAM, "OFF")
	field(ONAM, "ON")

	field(FLNK, "${P}PowerRb")
}

record(bi, "${P}PowerRb") {
	field(DESC, "Read back of power supply is enabled")
	field(DTYP, "stream")
	field(INP, "@simple.proto getPowerRb $(PORT)")
	field(PINI, YES)
	field(ZNAM, "OFF")
	field(ONAM, "ON")

	# field(FLNK, "${P}Status")
}

record(stringin, "${P}Version") {
	field(DESC, "A fixed float with a returned prefix")
	field(DTYP, "stream")
	field(INP, "@simple.proto getVersion $(PORT)")
	field(PINI, "YES")
}

# Calc

record(scalcout, "${P}2UCmd") {
	field(DESC, "Twice the voltage command")
	field(A, "0")
	field(CALC, "printf('1%i', A*2)")
	field(DTYP, "stream")
	field(OUT, "@simple.proto setUCmd $(PORT)")
	field(FLNK, "${P}URb")
}

# Regular Expressions

record(stringin, "${P}VersionNum") {
	field(DESC, "Just the version number")
	field(DTYP, "stream")
	field(INP, "@simple.proto getVersionNum $(PORT)")
	field(PINI, "YES")
}

record(stringin, "${P}VersionCat") {
	field(DESC, "Just the version numbers, concatenated")
	field(DTYP, "stream")
	field(INP, "@simple.proto getVersionCat $(PORT)")
	field(PINI, "YES")
}
