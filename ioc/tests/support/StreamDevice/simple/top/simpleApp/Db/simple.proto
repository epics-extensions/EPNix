Terminator = LF;

# Normal flow

getURb {
	out ":volt?";
	in "%f";
}

setUCmd {
	out ":volt %f";
	in "OK";

	@init { getURb; }
}

getUMes {
	out "meas:volt?";
	in "%f";
}

# Checks parsing enums
getPowerRb {
	out "outp:pon?";
	in "%{OFF|ON}";
}

# Checks writing enums
setPowerCmd {
	out "outp:pon %{OFF|ON}";
	in "OK";

	@init { getPowerRb; }
}

# Checks parsing with prefix
getVersion {
  out ":idn?";
  in "psu-simulator %s";
}

# Checks regular expressions

getVersionNum {
  out ":idn?";
  in "%.1/^psu-simulator (\d+\.\d+\.\d+)$/"
}

getVersionCat {
  out ":idn?";
  in "%#/^psu-simulator (\d+)\.(\d+)\.(\d+)$/\1\2\3/%s";
}
